name: Test
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-12

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug
        run: |
          xcodebuild -version
          xcodebuild -list -json
          xcrun xctrace list devices
          xcrun --sdk iphonesimulator --show-sdk-path

      - name: Set Default Scheme
        run: |
          # 1. Get available schemes in the project
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          
          # 2. Get the first scheme name parsing the JSON with Ruby and selecting the first element in the matrix
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['workspace']['schemes'][0]")

          # 3. Store and displays the default scheme
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # 1. Get the list of available iPhone simulators, and get the first one
          device=`xcrun xctrace list devices | grep -oE 'iPhone.*?[^\(]+' | sed -e "s/ Simulator//" | head -1 | awk '{$1=$1;print}'`
          
          # 2. Set the default scheme if selected on the previously step
          if [ $scheme = default ]; then scheme=$(cat default); fi

          # 3. Perform the actual build (for testing) using the previously gatherer information
          xcodebuild build-for-testing -scheme "$scheme" -destination "platform=$platform,name=$device" 
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # 1. Get the list of available iPhone simulators, and get the first one
          device=`xcrun xctrace list devices | grep -oE 'iPhone.*?[^\(]+' | sed -e "s/ Simulator//" | head -1 | awk '{$1=$1;print}'`
          
          # 2. Set the default scheme if selected on the previously step
          if [ $scheme = default ]; then scheme=$(cat default); fi

          # 3. Perform the actual testing using the build previously made
          xcodebuild test-without-building -scheme "$scheme" -destination "platform=$platform,name=$device"
